@using Microsoft.AspNetCore.Hosting;
@inject IWebHostEnvironment hostingEnvironment;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor httpContextAccessor;

@{
ViewData["Title"] = "Home Page";
var apiUrl = "";
@* var userId = httpContextAccessor.HttpContext.Request.Cookies["userId"]; *@
}

@{
  if (hostingEnvironment.IsDevelopment())
  {
    apiUrl = "https://localhost:7092/api/v1/";
  }
  else
  {
    apiUrl = "/api/v1/";
  }
}
<html>
    <head>
    <link href="/css/styles.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/99aa5f36e5.js" crossorigin="anonymous"></script>
    </head>
    <body>
        <div class="text-center">
        <h1 class="display-4" id="EventsTitle">Welcome to the event planner</h1>
        </div>
        <hr>
        <div id="mainContainer">
            <div id="Profile" style="border: 1px solid black;">
                <legend style="background-color: rgba(150,150,150,0.5); border-radius: 1px; padding:5px; margin-bottom:0">
                    <a>Personal Information</a>
                    <i class="fa-solid fa-user-pen" id="profileEditButton" style="font-size: 15px; float: right; margin-top: 13px;"></i>
                </legend>
                <div id="Profile-content">
                    <ul class="list-group" id="Profile-listcontent">
                        <li class="list-group-item" id='list-fullname'><a style="font-weight: 500;">Name: </a></li>
                        <li class="list-group-item" id='list-dob'><a style="font-weight: 500;">Date of birth: </a></li>
                        <li class="list-group-item" id='list-username'><a style="font-weight: 500;">Username: </a></li>
                        <li class="list-group-item" id='list-email'><a style="font-weight: 500;">E-mail: </a></li>
                        <li class="list-group-item" id='list-region'><a style="font-weight: 500;">Region: </a></li>
                        <li class="list-group-item" id='list-phonenum'><a style="font-weight: 500;">Phone Number: </a></li>
                        <li class="list-group-item" id='list-plannedevents'><a style="font-weight: 500;">Planned Events </a></li>
                        <li class="list-group-item" id='list-finishedevents'><a style="font-weight: 500;">Finished Events </a></li>
                    </ul>
                </div>
            </div>

            <div id="event-list" style="border: 1px solid black;">
                <legend style="background-color: rgba(150,150,150,0.5); border-radius: 1px; padding:5px; margin-bottom:0">
                    Upcoming Events
                </legend>
                <div id="event-list-content">
                    <ul class="list-group" id="event-listcontent">  
                        @* <li class="list-group-item">Cras justo odio</li> *@
                    </ul>
                </div>
            </div>
        </div>

        <div class="modal fade" id="profileEditModal" tabindex="-1" role="dialog" aria-labelledby="profileEditLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="profileEditLabel">Edit Profile</h5>
                            <button type="button" class="btn-close" id="closeProfileModal" aria-label="Close"></button>
                        </button>
                    </div>
                    <div class="modal-body">
                        <a style="font-weight: 500;">Name: </a><input type="text" placeholder="Firstname and Surname" id="editname"><br><hr>
                        <a style="font-weight: 500;">Date of birth: </a> <input type="date" value="2017-06-01" id="editdob"/><br><hr>
                        <a style="font-weight: 500;">Username: </a><input type="text" placeholder="Username" id="editusername"><br><hr>
                        <a style="font-weight: 500;">E-mail: </a><input type="email" placeholder="E-mail" id="editemail"><br><hr>
                        <a style="font-weight: 500;">Region: </a>
                        <select id="editregionId">
                            <option value="1">Gorenjska Slovenska</option>
                            <option value="2">Gorizia</option>
                            <option value="3">South Eastern Slovenia</option>
                            <option value="4">Carinthia</option>
                            <option value="5">Inner-kraška</option>
                            <option value="6">Coastal-kraška</option>
                            <option value="7">Inner Slovenia</option>
                            <option value="8">Podravska</option>
                            <option value="9">Pomurska</option>
                            <option value="10">	Savinjska</option>
                            <option value="11">	Lower Posavia</option>
                            <option value="12">	Zasavska</option>
                        </select><br><hr>
                        <a style="font-weight: 500;">Phone Number: </a><input type="text" placeholder="Phone number" id="editphonenum"><br><hr>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="saveEdits">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="InfoModal" tabindex="-1" role="dialog" aria-labelledby="InfoLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="InfoLabel">Modal title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        ...
                    </div>
                    <div class="modal-footer">
                    </div>
                </div>
            </div>
        </div>
    </body>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</html>



@section scripts
{
  <script>
    function getCookie(cookieName)
    {
      let cookie = {};
      document.cookie.split(';').forEach(function(el) {
        let [key,value] = el.split('=');
        cookie[key.trim()] = value;
      })
      return cookie[cookieName];
    }

    //CHECK IF LOGGED IN
    let userId = (getCookie("loginData"))
    if(userId != null && userId.length != 0)
    {
      main();
    }
    else
    {
        window.location.replace('/Home/Index');
    }
    let profileObject;

    async function displayPersonalInfo()
    {

        await fetch("@apiUrl"+"region/"+profileObject.regionID, {
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
            .then(response => response.json())
            .then(region =>{
            document.getElementById("list-region").innerHTML+=region.name
            });
        for(let [key, attrib] of Object.entries(profileObject))
        {
            if(key == "firstName")
            {
                document.getElementById("list-fullname").innerHTML+=attrib
            }
            if(key == "lastName")
            {
                document.getElementById("list-fullname").innerHTML+=" "+attrib
            }
            if(key == "doB")
            {
                let parts = attrib.split("T")
                let day = parts[0].split('-')[2]
                let month = parts[0].split('-')[1]
                let year = parts[0].split('-')[0]
                let finaldate = day+"."+month+"."+year
                document.getElementById("list-dob").innerHTML+=" "+finaldate
            }
            if(key == "userName")
            {
                document.getElementById("list-username").innerHTML+=" "+attrib
            }
            if(key == "email")
            {
                document.getElementById("list-email").innerHTML+=" "+attrib
            }
            if(key == "phoneNumber")
            {
                document.getElementById("list-phonenum").innerHTML+=" "+attrib
            }
        }
    }
    function fillEditModal()
    {
        $("#editname").val(profileObject.firstName+" "+profileObject.lastName)
        $("#editemail").val(profileObject.email)
        console.log(profileObject.regionID)
        $("#editregionId").val(profileObject.regionID).change()
        $("#editusername").val(profileObject.userName)
        $("#editdob").val(profileObject.doB.split("T")[0])
        $("#editphonenum").val(profileObject.phoneNumber)
    }

    async function updateProfile()
    {
        let jObject = {
            "name": $("#editname").val(),
            "email": $("#editemail").val(),
            "username": $("#editusername").val(),
            "phoneNumber": $("#editphonenum").val(),
            "regionID": $("#editregionId").val(),
            "dob": $("#editdob").val()+"T20:00:00.000Z"
        }

        let newData = JSON.stringify(jObject)
        
        let response = await fetch("@apiUrl"+`profile/userupdate/${profileObject.id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json', 'ApiKey':'secret' },
            body: newData
        });

        // Check the status code of the response
        if (response.ok) {
            // If the status code is OK, then the update was successful
            alert('Profile update successful');
            await $.ajax({
                url: '/Home/RefreshLoginPartial',
                type: 'GET',
                success: function(result) {
                    $('#loginPartialContainer').html(result);
                }
            });
            window.location.reload();
        } else {
            // If the status code is not OK, then the update was not successful
            alert('Error updating profile: ' + response.statusText+' Please Contact an Admin');
        }
    }

    function setListeners()
    {
        $(document).ready(function(){
            $('#profileEditButton').click(function(){
                $('#profileEditModal').modal('toggle')
            });
            $('#closeProfileModal').click(function(){
                //console.log("Hello")
                $('#profileEditModal').modal('hide')
            });

            for(let i=0;i<displayed;i++)
            {
                @* $("#info"+i).click(function(){
                        $('#InfoModal').modal('show')
                        }); *@

                $("#going"+i).click(function(){
                    console.log("i am going")
                    return false;
                });
            }

            $('#InfoButton').click(function(){
                $('#InfoModal').modal('show')
            });
        });

        
        $("#saveEdits").click(function()
        {
            updateProfile();
        })
    }

    let displayed=0

    async function main()
    {
        //GET PROFILE BY ID
        await fetch("@apiUrl"+"profile/"+userId, {
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
            .then(response => response.json())
            .then(profile =>{
                profileObject = profile
            });

        // SET TITLE
        document.getElementById("EventsTitle").innerHTML+=" "+profileObject.userName
        displayPersonalInfo();
        fillEditModal();
        //console.log(profileObject)
        // GET ALL EVENTS IN USER REGION

        let eventsArray = []
        
        await fetch("@apiUrl"+"event/region/"+profileObject.regionID,{
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
        .then(response => response.json())
        .then(events => {
        console.log("Got events")
        eventsArray = events
        });

        // console.log(eventsArray)
    
        let izpis = ""


        for (let i = 0; i < eventsArray.length; i++) {
            displayed++
           // console.log(eventsArray[i])
            let listItem = document.createElement('li');

            //var button = document.createElement("button")

            listItem.classList.add("list-group-item");

            let id

            for (let [key, attrib] of Object.entries(eventsArray[i])) {

                //console.log(key, attrib)

                if (key == "id") {
                    id = attrib
                } else if (key == "name") {
                    izpis = attrib + ","
                    listItem.appendChild(document.createTextNode(izpis));
                    listItem.innerHTML += "<br>";
                } else if (key == "date") {
                    let parts = attrib.split("T")
                    let day = parts[0].split('-')[2]
                    let month = parts[0].split('-')[1]
                    let year = parts[0].split('-')[0]
                    let finaldate = day + "." + month + "." + year
                    izpis = finaldate + ","

                    listItem.appendChild(document.createTextNode(izpis));

                    listItem.innerHTML += "<br>";

                } else if (key == "location") {
                    izpis = attrib

                    listItem.appendChild(document.createTextNode(izpis));
                    listItem.innerHTML += "<br>";

                    var info = document.createElement("i")
                    var linkInfo = document.createElement("a")

                    info.style.styleFloat = 'left';
                    info.style.cssFloat = 'left';
                    info.setAttribute("id", "info" + id)

                    info.classList.add("fa-solid");
                    info.classList.add("fa-file-lines");


                    var going = document.createElement("i")
                    var linkGoing = document.createElement("a")

                    going.style.styleFloat = 'right';
                    going.style.cssFloat = 'right';
                    going.style.fontSize = "20px";
                    going.setAttribute("id", "going" + id)

                    going.classList.add("fa-solid");
                    going.classList.add("fa-calendar-plus");


                    info.appendChild(linkInfo)
                    going.appendChild(linkGoing)

                    listItem.appendChild(info)

                    listItem.appendChild(going)


                }
                izpis = ""
            }
            document.getElementById('event-listcontent').appendChild(listItem);
            //console.log("Hello")
        }
        


        let eventhasactivityArray=[]
        
        await fetch("@apiUrl"+"eventhasactivity",{
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
            .then(response => response.json())
            .then(eventhasactivity =>{
                eventhasactivityArray=eventhasactivity
            });

        let activityArray=[]
        await fetch("@apiUrl"+"activity",{
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
            .then(response => response.json())
            .then(activity =>{
                activityArray=activity
            });

        let activityID
        let eventID
        let naslov
        for (let i = 0; i < eventhasactivityArray.length; i++) {
            
            
            await fetch("@apiUrl"+"activity/"+eventhasactivityArray[i].activityID,{
            method: 'GET',
            headers: {
            'ApiKey': 'secret'
            }
        })
            .then(response => response.json())
            .then(activity =>{
                $("#info" + eventhasactivityArray[i].eventID).click(function() {
                $('#InfoModal').modal('show')

                for(let j=0; j< eventsArray.length; j++)
            {
                if(eventsArray[j].id == eventhasactivityArray[i].eventID)
                    {
                         naslov = eventsArray[j].name
                    }
            }

                $('.modal-body').text(activity.description);
                $('.modal-title').text(naslov);
                console.log(activity)
            });
            });
        }
        
        
        

        setListeners()
    }
  </script>
}